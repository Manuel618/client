{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmera\\\\OneDrive\\\\Escritorio\\\\Teminar esto de RAUL\\\\Ejercicio_10\\\\client\\\\src\\\\components\\\\Chat.jsx\";\n// client/src/components/Chat.jsx\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Chat.css'; // Asegúrate de importar el nuevo archivo de estilos\nimport ListaUsuarios from './ListaUsuarios';\nfunction Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  // Para enviar mensajes: opción predefinida o \"personalizado\"\n  const [messageTypeOption, setMessageTypeOption] = useState('normal');\n  const [customMessageType, setCustomMessageType] = useState('');\n  // Para filtrar mensajes: se selecciona la categoría (por defecto 'all' muestra todos)\n  const [filterType, setFilterType] = useState('all');\n  // Para el filtro de mensajes personalizados\n  const [filterCustomText, setFilterCustomText] = useState('');\n  const userData = localStorage.getItem('user');\n  const user = userData ? JSON.parse(userData) : null;\n  const sender_id = user ? user.id : null;\n\n  // Polling: actualiza los mensajes cada 3 segundos\n  useEffect(() => {\n    const fetchMessages = () => {\n      fetch('/api/mensaje').then(res => res.json()).then(data => setMessages(data)).catch(err => console.error('Error obteniendo mensajes:', err));\n    };\n    fetchMessages();\n    const intervalId = setInterval(fetchMessages, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Marcar mensajes no leídos como vistos\n  useEffect(() => {\n    if (selectedUser && sender_id) {\n      const unseenMessages = messages.filter(msg => msg.recipient_id === sender_id && msg.sender_id === selectedUser.id && !msg.seen);\n      unseenMessages.forEach(msg => {\n        fetch(`/api/mensaje/seen/${msg.id}`, {\n          method: 'PUT'\n        });\n      });\n    }\n  }, [selectedUser, messages, sender_id]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!sender_id || !selectedUser) return;\n    let tipo = messageTypeOption;\n    if (messageTypeOption === 'personalizado') {\n      if (!customMessageType.trim()) {\n        alert(\"Ingrese una etiqueta personalizada\");\n        return;\n      }\n      tipo = customMessageType.trim();\n    }\n    try {\n      const res = await fetch('/api/mensaje', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender_id,\n          content: message,\n          recipient_id: selectedUser.id,\n          tipo: tipo\n        })\n      });\n      if (res.ok) {\n        const newMsg = await res.json();\n        setMessages([...messages, newMsg]);\n        setMessage('');\n        setMessageTypeOption('normal');\n        setCustomMessageType('');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Filtrado de mensajes:\n  const filteredMessages = selectedUser ? messages.filter(msg => {\n    const isChatMessage = msg.sender_id === sender_id && msg.recipient_id === selectedUser.id || msg.sender_id === selectedUser.id && msg.recipient_id === sender_id;\n    if (!isChatMessage) return false;\n    if (filterType === 'all') return true;\n    if (filterType === 'personalizado') {\n      if (filterCustomText.trim() !== '') {\n        return msg.tipo.toLowerCase().includes(filterCustomText.trim().toLowerCase());\n      } else {\n        return ![\"normal\", \"urgente\", \"personal\"].includes(msg.tipo.toLowerCase());\n      }\n    }\n    return msg.tipo.toLowerCase() === filterType.toLowerCase();\n  }) : [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListaUsuarios, {\n    onSelectUser: setSelectedUser,\n    selectedUser: selectedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, selectedUser ? `Chat con ${selectedUser.nombre}` : 'Selecciona un usuario'), selectedUser && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: filterType,\n    onChange: e => {\n      setFilterType(e.target.value);\n      setFilterCustomText('');\n    },\n    className: \"message-filter-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Todos\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Normal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Urgente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personalizado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"Personalizado\")), filterType === 'personalizado' && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: filterCustomText,\n    onChange: e => setFilterCustomText(e.target.value),\n    placeholder: \"Buscar etiqueta personalizada\",\n    className: \"filter-custom-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, selectedUser && filteredMessages.map(msg => /*#__PURE__*/React.createElement(\"div\", {\n    key: msg.id,\n    className: `message ${msg.sender_id === sender_id ? 'user-message' : 'other-message'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message-sender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, msg.sender_name), \" - \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 58\n    }\n  }, msg.tipo)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, msg.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: `message-status ${msg.seen ? 'seen' : 'unseen'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, msg.seen ? 'Visto' : 'No visto'), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"message-timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, new Date(msg.created_at).toLocaleString())))), selectedUser && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSend,\n    className: \"chat-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: messageTypeOption,\n    onChange: e => setMessageTypeOption(e.target.value),\n    className: \"message-type-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Normal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Urgente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personalizado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Personalizado\")), messageTypeOption === 'personalizado' && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: customMessageType,\n    onChange: e => setCustomMessageType(e.target.value),\n    placeholder: \"Etiqueta personalizada\",\n    className: \"custom-type-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    placeholder: \"Escribe un mensaje...\",\n    required: true,\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"chat-send-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Enviar\")))));\n}\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","ListaUsuarios","Chat","message","setMessage","messages","setMessages","selectedUser","setSelectedUser","messageTypeOption","setMessageTypeOption","customMessageType","setCustomMessageType","filterType","setFilterType","filterCustomText","setFilterCustomText","userData","localStorage","getItem","user","JSON","parse","sender_id","id","fetchMessages","fetch","then","res","json","data","catch","err","console","error","intervalId","setInterval","clearInterval","unseenMessages","filter","msg","recipient_id","seen","forEach","method","handleSend","e","preventDefault","tipo","trim","alert","headers","body","stringify","content","ok","newMsg","filteredMessages","isChatMessage","toLowerCase","includes","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSelectUser","nombre","value","onChange","target","type","placeholder","map","key","sender_name","Date","created_at","toLocaleString","onSubmit","required"],"sources":["C:/Users/mmera/OneDrive/Escritorio/Teminar esto de RAUL/Ejercicio_10/client/src/components/Chat.jsx"],"sourcesContent":["// client/src/components/Chat.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/Chat.css'; // Asegúrate de importar el nuevo archivo de estilos\r\nimport ListaUsuarios from './ListaUsuarios';\r\n\r\nfunction Chat() {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  // Para enviar mensajes: opción predefinida o \"personalizado\"\r\n  const [messageTypeOption, setMessageTypeOption] = useState('normal');\r\n  const [customMessageType, setCustomMessageType] = useState('');\r\n  // Para filtrar mensajes: se selecciona la categoría (por defecto 'all' muestra todos)\r\n  const [filterType, setFilterType] = useState('all');\r\n  // Para el filtro de mensajes personalizados\r\n  const [filterCustomText, setFilterCustomText] = useState('');\r\n  \r\n  \r\n\r\n  const userData = localStorage.getItem('user');\r\n  const user = userData ? JSON.parse(userData) : null;\r\n  const sender_id = user ? user.id : null;\r\n\r\n  // Polling: actualiza los mensajes cada 3 segundos\r\n  useEffect(() => {\r\n    const fetchMessages = () => {\r\n      fetch('/api/mensaje')\r\n        .then((res) => res.json())\r\n        .then((data) => setMessages(data))\r\n        .catch((err) => console.error('Error obteniendo mensajes:', err));\r\n    };\r\n\r\n    fetchMessages();\r\n    const intervalId = setInterval(fetchMessages, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // Marcar mensajes no leídos como vistos\r\n  useEffect(() => {\r\n    if (selectedUser && sender_id) {\r\n      const unseenMessages = messages.filter(\r\n        (msg) =>\r\n          msg.recipient_id === sender_id &&\r\n          msg.sender_id === selectedUser.id &&\r\n          !msg.seen\r\n      );\r\n      unseenMessages.forEach((msg) => {\r\n        fetch(`/api/mensaje/seen/${msg.id}`, { method: 'PUT' });\r\n      });\r\n    }\r\n  }, [selectedUser, messages, sender_id]);\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!sender_id || !selectedUser) return;\r\n    let tipo = messageTypeOption;\r\n    if (messageTypeOption === 'personalizado') {\r\n      if (!customMessageType.trim()) {\r\n        alert(\"Ingrese una etiqueta personalizada\");\r\n        return;\r\n      }\r\n      tipo = customMessageType.trim();\r\n    }\r\n    try {\r\n      const res = await fetch('/api/mensaje', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          sender_id,\r\n          content: message,\r\n          recipient_id: selectedUser.id,\r\n          tipo: tipo\r\n        })\r\n      });\r\n      if (res.ok) {\r\n        const newMsg = await res.json();\r\n        setMessages([...messages, newMsg]);\r\n        setMessage('');\r\n        setMessageTypeOption('normal');\r\n        setCustomMessageType('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  // Filtrado de mensajes:\r\n  const filteredMessages = selectedUser\r\n    ? messages.filter((msg) => {\r\n        const isChatMessage =\r\n          (msg.sender_id === sender_id && msg.recipient_id === selectedUser.id) ||\r\n          (msg.sender_id === selectedUser.id && msg.recipient_id === sender_id);\r\n        if (!isChatMessage) return false;\r\n        if (filterType === 'all') return true;\r\n        if (filterType === 'personalizado') {\r\n          if (filterCustomText.trim() !== '') {\r\n            return msg.tipo.toLowerCase().includes(filterCustomText.trim().toLowerCase());\r\n          } else {\r\n            return ![\"normal\", \"urgente\", \"personal\"].includes(msg.tipo.toLowerCase());\r\n          }\r\n        }\r\n        return msg.tipo.toLowerCase() === filterType.toLowerCase();\r\n      })\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"chat-container\">\r\n        <ListaUsuarios onSelectUser={setSelectedUser} selectedUser={selectedUser} />\r\n        <div className=\"chat-section\">\r\n          <div className=\"chat-header\">\r\n            <h2>\r\n              {selectedUser ? `Chat con ${selectedUser.nombre}` : 'Selecciona un usuario'}\r\n            </h2>\r\n            {selectedUser && (\r\n              <div className=\"filter-container\">\r\n                <select\r\n                  value={filterType}\r\n                  onChange={(e) => {\r\n                    setFilterType(e.target.value);\r\n                    setFilterCustomText('');\r\n                  }}\r\n                  className=\"message-filter-select\"\r\n                >\r\n                  <option value=\"all\">Todos</option>\r\n                  <option value=\"normal\">Normal</option>\r\n                  <option value=\"urgente\">Urgente</option>\r\n                  <option value=\"personal\">Personal</option>\r\n                  <option value=\"personalizado\">Personalizado</option>\r\n                </select>\r\n                {filterType === 'personalizado' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={filterCustomText}\r\n                    onChange={(e) => setFilterCustomText(e.target.value)}\r\n                    placeholder=\"Buscar etiqueta personalizada\"\r\n                    className=\"filter-custom-input\"\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"messages-container\">\r\n            {selectedUser &&\r\n              filteredMessages.map((msg) => (\r\n                <div\r\n                  key={msg.id}\r\n                  className={`message ${msg.sender_id === sender_id ? 'user-message' : 'other-message'}`}\r\n                >\r\n                  <p className=\"message-sender\">\r\n                    <strong>{msg.sender_name}</strong> - <em>{msg.tipo}</em>\r\n                  </p>\r\n                  <p className=\"message-content\">{msg.content}</p>\r\n                  {/* Badge \"Visto\" / \"No visto\" */}\r\n                  <div className={`message-status ${msg.seen ? 'seen' : 'unseen'}`}>\r\n                    {msg.seen ? 'Visto' : 'No visto'}\r\n                  </div>\r\n                  <small className=\"message-timestamp\">\r\n                    {new Date(msg.created_at).toLocaleString()}\r\n                  </small>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          {selectedUser && (\r\n            <form onSubmit={handleSend} className=\"chat-input-container\">\r\n              <select\r\n                value={messageTypeOption}\r\n                onChange={(e) => setMessageTypeOption(e.target.value)}\r\n                className=\"message-type-select\"\r\n              >\r\n                <option value=\"normal\">Normal</option>\r\n                <option value=\"urgente\">Urgente</option>\r\n                <option value=\"personal\">Personal</option>\r\n                <option value=\"personalizado\">Personalizado</option>\r\n              </select>\r\n              {messageTypeOption === 'personalizado' && (\r\n                <input\r\n                  type=\"text\"\r\n                  value={customMessageType}\r\n                  onChange={(e) => setCustomMessageType(e.target.value)}\r\n                  placeholder=\"Etiqueta personalizada\"\r\n                  className=\"custom-type-input\"\r\n                />\r\n              )}\r\n              <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Escribe un mensaje...\"\r\n                required\r\n                className=\"chat-input\"\r\n              />\r\n              <button type=\"submit\" className=\"chat-send-button\">\r\n                Enviar\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmera\\\\OneDrive\\\\Escritorio\\\\Teminar esto de RAUL\\\\Ejercicio_10\\\\client\\\\src\\\\components\\\\Register.jsx\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Register.css';\nfunction Register() {\n  const [nombre, setNombre] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Lista de dominios permitidos\n  const allowedDomains = ['gmail.com', 'hotmail.com', 'outlook.com', 'yahoo.com'];\n  const validateEmail = email => {\n    const domain = email.split('@')[1];\n    return allowedDomains.includes(domain);\n  };\n  const validatePassword = pwd => {\n    const regex = /^(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\n    return regex.test(pwd);\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!validateEmail(email)) {\n      setMessage('El correo debe ser de dominio gmail.com, hotmail.com, outlook.com o yahoo.com.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setMessage('La contraseña debe tener al menos 8 caracteres, una mayúscula y un carácter especial.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setMessage('Las contraseñas no coinciden.');\n      return;\n    }\n    try {\n      const res = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nombre,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage('Registro exitoso');\n        navigate('/');\n      } else {\n        setMessage(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('Error en el registro.');\n    }\n  };\n  const goToLogin = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Registrarse\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Nombre:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nombre,\n    onChange: e => setNombre(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Correo:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Contrase\\xF1a:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Confirmar Contrase\\xF1a:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Registrarse\")), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"\\xBFYa tienes una cuenta?\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: goToLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Volver al Login\"))));\n}\nexport default Register;","map":{"version":3,"names":["React","useState","useNavigate","Register","nombre","setNombre","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","allowedDomains","validateEmail","domain","split","includes","validatePassword","pwd","regex","test","handleRegister","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","goToLogin","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick"],"sources":["C:/Users/mmera/OneDrive/Escritorio/Teminar esto de RAUL/Ejercicio_10/client/src/components/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Register.css';\r\n\r\nfunction Register() {\r\n  const [nombre, setNombre] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Lista de dominios permitidos\r\n  const allowedDomains = ['gmail.com', 'hotmail.com', 'outlook.com', 'yahoo.com'];\r\n\r\n  const validateEmail = (email) => {\r\n    const domain = email.split('@')[1];\r\n    return allowedDomains.includes(domain);\r\n  };\r\n\r\n  const validatePassword = (pwd) => {\r\n    const regex = /^(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\r\n    return regex.test(pwd);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateEmail(email)) {\r\n      setMessage('El correo debe ser de dominio gmail.com, hotmail.com, outlook.com o yahoo.com.');\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      setMessage('La contraseña debe tener al menos 8 caracteres, una mayúscula y un carácter especial.');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Las contraseñas no coinciden.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ nombre, email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessage('Registro exitoso');\r\n        navigate('/');\r\n      } else {\r\n        setMessage(`Error: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Error en el registro.');\r\n    }\r\n  };\r\n\r\n  const goToLogin = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-container\">\r\n        <h2>Registrarse</h2>\r\n        <form onSubmit={handleRegister}>\r\n          <label>\r\n            Nombre:\r\n            <input type=\"text\" value={nombre} onChange={(e) => setNombre(e.target.value)} required />\r\n          </label>\r\n          <label>\r\n            Correo:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          </label>\r\n          <label>\r\n            Contraseña:\r\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </label>\r\n          <label>\r\n            Confirmar Contraseña:\r\n            <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\r\n          </label>\r\n          <button type=\"submit\">Registrarse</button>\r\n        </form>\r\n        {message && <p className=\"error-msg\">{message}</p>}\r\n\r\n        <div className=\"auth-link\">\r\n          <p>¿Ya tienes una cuenta?</p>\r\n          <button type=\"button\" onClick={goToLogin}>Volver al Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,cAAc,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,CAAC;EAE/E,MAAMC,aAAa,GAAIV,KAAK,IAAK;IAC/B,MAAMW,MAAM,GAAGX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC,OAAOH,cAAc,CAACI,QAAQ,CAACF,MAAM,CAAC;EACxC,CAAC;EAED,MAAMG,gBAAgB,GAAIC,GAAG,IAAK;IAChC,MAAMC,KAAK,GAAG,oCAAoC;IAClD,OAAOA,KAAK,CAACC,IAAI,CAACF,GAAG,CAAC;EACxB,CAAC;EAED,MAAMG,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACV,aAAa,CAACV,KAAK,CAAC,EAAE;MACzBO,UAAU,CAAC,gFAAgF,CAAC;MAC5F;IACF;IAEA,IAAI,CAACO,gBAAgB,CAACZ,QAAQ,CAAC,EAAE;MAC/BK,UAAU,CAAC,uFAAuF,CAAC;MACnG;IACF;IAEA,IAAIL,QAAQ,KAAKE,eAAe,EAAE;MAChCG,UAAU,CAAC,+BAA+B,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMc,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE7B,MAAM;UAAEE,KAAK;UAAEE;QAAS,CAAC;MAClD,CAAC,CAAC;MACF,MAAM0B,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAIR,GAAG,CAACS,EAAE,EAAE;QACVvB,UAAU,CAAC,kBAAkB,CAAC;QAC9BC,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLD,UAAU,CAAC,UAAUqB,IAAI,CAACtB,OAAO,EAAE,CAAC;MACtC;IACF,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBxB,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,MAAM0B,SAAS,GAAGA,CAAA,KAAM;IACtBzB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEd,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB/C,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,eACpB/C,KAAA,CAAAwC,aAAA;IAAMQ,QAAQ,EAAExB,cAAe;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,SAEL,eAAA/C,KAAA,CAAAwC,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACC,KAAK,EAAE9C,MAAO;IAAC+C,QAAQ,EAAG1B,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;IAACG,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnF,CAAC,eACR/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,SAEL,eAAA/C,KAAA,CAAAwC,aAAA;IAAOS,IAAI,EAAC,OAAO;IAACC,KAAK,EAAE5C,KAAM;IAAC6C,QAAQ,EAAG1B,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;IAACG,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClF,CAAC,eACR/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,gBAEL,eAAA/C,KAAA,CAAAwC,aAAA;IAAOS,IAAI,EAAC,UAAU;IAACC,KAAK,EAAE1C,QAAS;IAAC2C,QAAQ,EAAG1B,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;IAACG,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3F,CAAC,eACR/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,0BAEL,eAAA/C,KAAA,CAAAwC,aAAA;IAAOS,IAAI,EAAC,UAAU;IAACC,KAAK,EAAExC,eAAgB;IAACyC,QAAQ,EAAG1B,CAAC,IAAKd,kBAAkB,CAACc,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;IAACG,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzG,CAAC,eACR/C,KAAA,CAAAwC,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CACrC,CAAC,EACNnC,OAAO,iBAAIZ,KAAA,CAAAwC,aAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnC,OAAW,CAAC,eAElDZ,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,2BAAyB,CAAC,eAC7B/C,KAAA,CAAAwC,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACK,OAAO,EAAEf,SAAU;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CAC9D,CACF,CACF,CAAC;AAEV;AAEA,eAAe5C,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}